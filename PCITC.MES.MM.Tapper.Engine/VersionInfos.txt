//=========================================================================================================
//========TAPPER V1.0.0		Release on 2015-05-20	By JiaK
//=========================================================================================================
1：实现Tapper Framework框架
2：实现Tapper Engin任务生成-调度-执行框架
3：基本功能列表：
	1）基于时间段分片的规则时序性
	2）树形任务队列结构
	3）基于规则时序性的任务生命周期策略
	4）发布-订阅模式的批量任务调度策略
	5）任务处理失败重试策略
	6）多实例，多并发的任务发布、任务处理单元
	7）各处理单元间的异步信息同步策略
	8）详细的日志记录
4：需要提升问题：
	1）任务链模型
	2）面向用户的日志关系数据库持久化及可视化


//=========================================================================================================
//========TAPPER V1.0.1		Release on 2015-05-25	By JiaK
//=========================================================================================================
1：加入面向用户的可视化关系数据库日志
	在Broker中实现NotifyService，异步地将服务维护的日志队列中的日志信息写入关系数据库（Oracle）；
	在任务生成、任务调度、任务处理等关键点，除了Log4Net日志服务，也调用NotifyService，将日志信息缓存到服务本地消息队列。
2：数据库中新增T_MV_NOTIFY_ENTITY表，用于持久化面向用户的日志信息.


//=========================================================================================================
//========TAPPER V1.1.0		Release on 2015-05-27	By JiaK
//=========================================================================================================
1：加入任务链功能：即，通过规则模型指定的RuleNext，在规则对应任务实体执行<成功>后，激活挂接的后续规则生成的任务实体，从而形成任务链的处理形式。
1）数据库实体修改：RuleModel表，TaskEntity表，均加入IsHeader标识，RuleIdNext字段，用于标识任务链的链头及关联的后续规则（任务）模型ID
2）Producer修改：a)仅对IsHeader的规则模型生成任务实体;b)对规则链中的子规则，递归生成状态为Created的任务实体并入队;
3）Broker修改：a)Created状态任务不参与调度;b)Created状态任务在Expired后移除;
			   c)TaskService中，任务状态更新为Complete后，定位到任务链的下一个任务，并将其状态由Created置为Waiting，参与任务调度;
4）Consumer修改：处理任务后仍然调用TaskService状态更新方法，未做改动。
			

//=========================================================================================================
//========TAPPER V1.1.1		Release on 2015-05-28	By JiaK
//=========================================================================================================
1：并发任务执行过程中遇到的wcfChannelFactory问题，修改WcfChannelFactory类，将ChannelFactory缓存，对不同线程的创建channel请求，复用channelFactory对象。
测试中还遇到其它RPC的问题，暂时未定位具体问题，需要进一步加大并发测试。

//=========================================================================================================
//========TAPPER V1.1.2		Release on 2015-06-09	By JiaK
//=========================================================================================================
1：修复NHibernate保存时"a different object with the same identifier value was already associated with the session: 19519146"的一个异常。
2：支持net.tcp协议WCF方法调用；
3：新增一个net.tcp协议的contract文件，用于炼油装置业务解析。

//=========================================================================================================
//========TAPPER V1.1.3		Release on 2015-06-11	By JiaK
//=========================================================================================================
1：新增一个winform简易管理界面，可用于Tapper的简单管理及消息查询，有待改进。

//=========================================================================================================
//========TAPPER V1.1.4		Release on 2015-06-21	By JiaK
//=========================================================================================================
1：Consumer修复一个BUG，该BUG将导致在不同Topic并发任务处理过程中由于taskHandler资源争用导致的taskHandler共享属性值在使用前被并发任务错误地修改的问题。
   修复方式，将taskHandler作为concurrentDictionary， 在consumer订阅topic的同时，为该topic新增非sigleton的taskHandler。
   PS:补充解决方案，也可以保留原有的sigleton taskHandler,但需要在对taskHandler处理任务前lock，在taskProcess Action处理完毕（并行为开新线程）之后再释放资源；
      该补充解决方案会共享资源的锁定，对并发处理的性能会有一定影响，因此未采用。